# ------------------------------
# Longest Common Prefix 
# ------------------------------
#
# Write a function to find the longest common
# prefix string amongst an array of strings.

Insert(head, string)
{
    neck := &head;
    foreach(char : string)
    {
        if((*neck)[char] == null)
        {
            (*neck)[char] := {};
        }
        neck = &(*neck)[char];
    }
}

Prefix(head)
{
    longest := "";
    chars := Keys(head);
    foreach(char : chars)
    {
        prefix := char;
        neck := &head[char];
        while(true)
        {
            keys := Keys(*neck);
            if((Len(keys) >= 2)  # Trie branch fork - this is a common prefix.
            || (Len(keys) == 0)) # Trie branch end  - this is not a prefix.
            {
                break; 
            }
            next := keys[0];
            prefix += next;
            neck = &(*neck)[next];
        }
        if(Len(prefix) > Len(longest))
        {
            longest = prefix;
        }
    }
    ret longest;
}

Main()
{
    head := {};
    foreach(string : [
        "fffffg",
        "abdc",
        "abde",
        "fffff",
        "abdeeeee",
        "abdcee",
        "fffffh"])
        {
            Insert(head, string);
        }
    Assert(Prefix(head) == "fffff");
    ret 0;
}

# IMPLEMENT TRIE (PREFIX TREE)
# 
# A trie (pronounced as "try") or prefix tree is a
# tree data structure used to efficiently store and retrieve
# keys in a dataset of strings. There are various applications
# of this data structure, such as autocomplete and spellchecker.

inc lib.Trie;

Main()
{
    trie := {};
    Trie_Insert(trie, "asdf");
    Trie_Insert(trie, "asdfa");
    Trie_Insert(trie, "asdfb");
    Trie_Insert(trie, "asdfc");
    Assert(Trie_Search(trie, "asdf") == true);
    Assert(Trie_Search(trie, "asdfa") == true);
    Assert(Trie_Search(trie, "asdfb") == true);
    Assert(Trie_Search(trie, "asdfc") == true);
    Assert(Trie_Prefix(trie, "asdf") == true);
    Assert(Trie_Prefix(trie, "asdfa") == true);
    Assert(Trie_Prefix(trie, "asdfb") == true);
    Assert(Trie_Prefix(trie, "asdfc") == true);
    ret 0;
}

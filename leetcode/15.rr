# LONGEST REPEATING CHARACTER REPLACEMENT
#
# You are given a string s and an integer k.
# You can choose any character of the string
# and change it to any other uppercase English character.
# You can perform this operation at most k times.
# Return the length of the longest substring containing
# the same letter you can get after performing the above operations.

Replacer(string, count)
{
    max := 0;
    l := 0;
    r := 0;
    x := string[l];
    while(r < Len(string))
    {
        y := string[r];
        if(x != y)
        {
            k := count;
            i := r;
            while(i < Len(string))
            {
                if(string[i] != x)
                {
                    if(k == 0)
                    {
                        break;
                    }
                    k -= 1;
                }
                i += 1;
            }
            total := (r - l) + (i - r);
            if(total > max)
            {
                max = total; 
            }
            l = r;
            x = string[l];
        }
        r += 1;
    }
    ret max;
}

Main()
{
    Assert(Replacer("AABABBA", 1) == 4);
    Assert(Replacer("ABAB", 2) == 4);
    ret 0;
}

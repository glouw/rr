# MAXIMUM DEPTH OF BINARY TREE
# 
# Given the root of a binary tree, return its maximum depth.
# 
# A binary tree's maximum depth is the number of
# nodes along the longest path from the root node
# down to the farthest leaf node.

inc lib.Tree;

Build()
{
    node := Tree_Node(1);
    node@l = Tree_Node(2);
    node@l@l = Tree_Node(2);
    node@l@l@l = Tree_Node(2);
    node@l@l@l@l = Tree_Node(2);
    node@r = Tree_Node(3);
    node@r@r = Tree_Node(4);
    node@r@r@l = Tree_Node(4);
    node@r@r@l@l = Tree_Node(9);
    node@r@r@l@l@r = Tree_Node(9);
    node@r@r@l@l@l = Tree_Node(9);
    node@r@r@l@l@l@r = Tree_Node(9);
    ret node;
}

Depth(nodes)
{
    if(nodes != null)
    {
        ret Max(
            Depth(nodes@l) + 1,
            Depth(nodes@r) + 1);
    }
    ret 0;
}

Main()
{
    nodes := Build();
    Assert(Depth(nodes) == 7);
    ret 0;
}

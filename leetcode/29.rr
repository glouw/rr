# BINARY TREE LEVEL ORDER TRAVERSAL
# 
# Given the root of a binary tree, return
# the level order traversal of its nodes'
# values. (i.e., from left to right, level by level).

inc lib.Tree;

Nodes()
{
    nodes := Tree_Node(1);
    nodes@l = Tree_Node(2);
    nodes@r = Tree_Node(3);
    nodes@l@r = Tree_Node(4);
    nodes@l@l = Tree_Node(9);
    nodes@l@l@l = Tree_Node(2);
    ret nodes;
}

Add(queue, level, value)
{
    if(level == Len(queue))
    {
        queue += [[]];
    }
    queue[level] += value;
}

Level(nodes, level, queue)
{
    if(nodes == null)
    {
        ret;
    }
    else
    {
        next := level + 1;
        Add(queue, level, nodes@value);
        Level(nodes@l, next, queue);
        Level(nodes@r, next, queue);
    }
}

Main()
{
    queue := [];
    Level(Nodes(), 0, queue);
    Print(queue);
    Assert(queue == [ [1], [2, 3], [9, 4], [2] ]);
    ret 0;
}

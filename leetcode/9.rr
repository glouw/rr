# ------------------------------
# Reverse Integer 
# ------------------------------
#
# Reverse digits of an integer.

Rev(x)
{
    neg := false;
    if(x < 0)
    {
        neg = true;
    }
    abs := Abs(x);
    digits := [];
    while(abs > 0)
    {
        d := abs % 10;
        abs /= 10;
        abs = Floor(abs);
        digits += d;
    }
    rev := 0;
    len := Len(digits);
    for(i := 0; i < len; i += 1)
    {
        power := len - i - 1;
        mult := 10 ** power;
        rev += mult * digits[i];
    }
    if(neg == true)
    {
        rev *= -1;
    }
    ret rev;
}

Main()
{
    Assert(Rev(+128) == +821);
    Assert(Rev(-128) == -821);
    Assert(Rev(-100) == -1);
    Assert(Rev(+100) == +1);
    Assert(Rev(+0) == +0);
    Assert(Rev(-0) == -0);
    ret 0;
}

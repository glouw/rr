lib Video
{
    Video_Init(xres, yres);
    Video_Clear();
    Video_Draw(r, g, b, x, y);
    Video_Present();
    Video_Delay(ms);
    Video_Destroy();
}

Circle(x, y, vx, vy, radius)
{
    ret {
        .r : 255,
        .g : 255,
        .b : 255,
        .x : x,
        .y : y,
        .vx : vx,
        .vy : vy,
        .radius : radius,
        .draws : 0,
    };
}

Circle_RandomizeColor(self)
{
    self.r = Rand() %% 256;
    self.g = Rand() %% 256;
    self.b = Rand() %% 256;
}

Circle_Pixels(self, x, y)
{
    foreach(coord : [
        [ self.x + x, self.y + y],
        [ self.x - x, self.y + y],
        [ self.x + x, self.y - y],
        [ self.x - x, self.y - y],
        [ self.x + y, self.y + x],
        [ self.x - y, self.y + x],
        [ self.x + y, self.y - x],
        [ self.x - y, self.y - x]])
    {
        Video_Draw(self.r, self.g, self.b, coord[0], coord[1]);
    }
}
 
Circle_Draw(self)
{
    x := 0;
    y := self.radius;
    d := 3 - 2 * self.radius;
    Circle_Pixels(self, x, y);
    while(y >= x)
    {
        x += 1;
        if(d > 0)
        {
            y -= 1;
            d = d + 4 * (x - y) + 10;
        }
        else
        {
            d = d + 4 * x + 6;
        }
        Circle_Pixels(self, x, y);
    }
    if((self.draws %% 30) == 0)
    {
        Circle_RandomizeColor(self);
    }
    self.draws += 1;
}

Circle_Move(self)
{
    self.x += self.vx;
    self.y += self.vy;
}

Process(circles)
{
    foreach(circle : circles)
    {
        Circle_Move(circle);
        Circle_Draw(circle);
    }
}

Frand()
{
    max := 512;
    ret 2 * ((Rand() % max) / max - 0.5);
}

Main()
{
    Srand(Time());
    xres := 256;
    yres := 256;
    Video_Init(xres, yres);
    circles := [ 
        Circle(xres / 2, yres / 2, Frand(), Frand(), Rand() % (xres / 2)),
        Circle(xres / 2, yres / 2, Frand(), Frand(), Rand() % (xres / 2)),
        Circle(xres / 2, yres / 2, Frand(), Frand(), Rand() % (xres / 2)),
        Circle(xres / 2, yres / 2, Frand(), Frand(), Rand() % (xres / 2)),
        Circle(xres / 2, yres / 2, Frand(), Frand(), Rand() % (xres / 2)),
        Circle(xres / 2, yres / 2, Frand(), Frand(), Rand() % (xres / 2)),
    ];
    for(cycles := 0; cycles < 256; cycles += 1)
    {
        Video_Clear();
        Process(circles);
        Video_Present();
    }
    Video_Destroy();
    ret 0;
}
